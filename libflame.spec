#
# This file is auto-generated. DO NOT EDIT
# Generated by: autospec.py
#
Name     : libflame
Version  : 5.2.0
Release  : 5
URL      : https://github.com/flame/libflame/archive/5.2.0.tar.gz
Source0  : https://github.com/flame/libflame/archive/5.2.0.tar.gz
Summary  : Basic Linear Algebra Subprograms F77 reference implementations
Group    : Development/Tools
License  : BSD-3-Clause HPND
Requires: libflame-lib = %{version}-%{release}
Requires: libflame-license = %{version}-%{release}
BuildRequires : buildreq-cmake
BuildRequires : gfortran
BuildRequires : openblas-dev
Patch1: makefile-test.patch

%description
libflame is a portable library for dense matrix computations, providing much of the
functionality present in LAPACK, developed by current and former members of the
Science of High-Performance Computing (SHPC) group in the Institute for Computational
Engineering and Sciences at The University of Texas at Austin.
libflame includes a compatibility layer, lapack2flame, which includes a complete
LAPACK implementation.

%package dev
Summary: dev components for the libflame package.
Group: Development
Requires: libflame-lib = %{version}-%{release}
Provides: libflame-devel = %{version}-%{release}
Requires: libflame = %{version}-%{release}

%description dev
dev components for the libflame package.


%package lib
Summary: lib components for the libflame package.
Group: Libraries
Requires: libflame-license = %{version}-%{release}

%description lib
lib components for the libflame package.


%package license
Summary: license components for the libflame package.
Group: Default

%description license
license components for the libflame package.


%prep
%setup -q -n libflame-5.2.0
cd %{_builddir}/libflame-5.2.0
%patch1 -p1
pushd ..
cp -a libflame-5.2.0 buildavx2
popd
pushd ..
cp -a libflame-5.2.0 buildavx512
popd

%build
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
export LANG=C.UTF-8
export SOURCE_DATE_EPOCH=1587228291
export GCC_IGNORE_WERROR=1
export AR=gcc-ar
export RANLIB=gcc-ranlib
export NM=gcc-nm
export CFLAGS="$CFLAGS -O3 -ffat-lto-objects -flto=4 "
export FCFLAGS="$FFLAGS -O3 -ffat-lto-objects -flto=4 "
export FFLAGS="$FFLAGS -O3 -ffat-lto-objects -flto=4 "
export CXXFLAGS="$CXXFLAGS -O3 -ffat-lto-objects -flto=4 "
%configure --disable-static --enable-max-arg-list-hack \
--enable-dynamic-build \
--enable-lapack2flame \
--enable-multithreading=openmp \
--enable-blas3-front-end-cntl-trees \
--enable-cblas-interfaces \
--enable-supermatrix
make  %{?_smp_mflags}

unset PKG_CONFIG_PATH
pushd ../buildavx2/
export CFLAGS="$CFLAGS -m64 -march=haswell"
export CXXFLAGS="$CXXFLAGS -m64 -march=haswell"
export FFLAGS="$FFLAGS -m64 -march=haswell"
export FCFLAGS="$FCFLAGS -m64 -march=haswell"
export LDFLAGS="$LDFLAGS -m64 -march=haswell"
%configure --disable-static --enable-max-arg-list-hack \
--enable-dynamic-build \
--enable-lapack2flame \
--enable-multithreading=openmp \
--enable-blas3-front-end-cntl-trees \
--enable-cblas-interfaces \
--enable-supermatrix
make  %{?_smp_mflags}
popd
unset PKG_CONFIG_PATH
pushd ../buildavx512/
export CFLAGS="$CFLAGS -m64 -march=skylake-avx512 -mprefer-vector-width=512"
export CXXFLAGS="$CXXFLAGS -m64 -march=skylake-avx512 -mprefer-vector-width=512"
export FFLAGS="$FFLAGS -m64 -march=skylake-avx512 -mprefer-vector-width=512"
export FCFLAGS="$FCFLAGS -m64 -march=skylake-avx512 -mprefer-vector-width=512"
export LDFLAGS="$LDFLAGS -m64 -march=skylake-avx512"
%configure --disable-static --enable-max-arg-list-hack \
--enable-dynamic-build \
--enable-lapack2flame \
--enable-multithreading=openmp \
--enable-blas3-front-end-cntl-trees \
--enable-cblas-interfaces \
--enable-supermatrix
make  %{?_smp_mflags}
popd
%check
export LANG=C.UTF-8
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
pushd ../buildavx512/
cd test
make LIB_PATH=%{buildroot}/usr/lib64 INC_PATH=%{buildroot}/usr/include
LD_LIBRARY_PATH=%{buildroot}/usr/lib64/haswell/avx512_1 ./test_libflame.x
popd
pushd ../buildavx2/
cd test
make LIB_PATH=%{buildroot}/usr/lib64 INC_PATH=%{buildroot}/usr/include
LD_LIBRARY_PATH=%{buildroot}/usr/lib64/haswell ./test_libflame.x
popd
cd test
make LIB_PATH=%{buildroot}/usr/lib64 INC_PATH=%{buildroot}/usr/include
LD_LIBRARY_PATH=%{buildroot}/usr/lib64 ./test_libflame.x

%install
export SOURCE_DATE_EPOCH=1587228291
rm -rf %{buildroot}
mkdir -p %{buildroot}/usr/share/package-licenses/libflame
cp %{_builddir}/libflame-5.2.0/build/templates/license.c %{buildroot}/usr/share/package-licenses/libflame/11b889cbe5338cf8de2a75749738adeeab861700
cp %{_builddir}/libflame-5.2.0/build/templates/license.h %{buildroot}/usr/share/package-licenses/libflame/11b889cbe5338cf8de2a75749738adeeab861700
cp %{_builddir}/libflame-5.2.0/build/templates/license.m %{buildroot}/usr/share/package-licenses/libflame/43aec05aaa034319115be9a2ae3aa318655c6217
cp %{_builddir}/libflame-5.2.0/docs/libflame/20-setup-common/license.tex %{buildroot}/usr/share/package-licenses/libflame/a0065b8dcdd0af36d23e2a95aba20acbdfec4ecd
pushd ../buildavx512/
%make_install_avx512
popd
pushd ../buildavx2/
%make_install_avx2
popd
%make_install

%files
%defattr(-,root,root,-)

%files dev
%defattr(-,root,root,-)
/usr/include/FLAME.h
/usr/lib64/haswell/avx512_1/libflame.so
/usr/lib64/haswell/libflame.so
/usr/lib64/libflame.so

%files lib
%defattr(-,root,root,-)
/usr/lib64/haswell/avx512_1/libflame.so.1
/usr/lib64/haswell/avx512_1/libflame.so.1.0.0
/usr/lib64/haswell/libflame.so.1
/usr/lib64/haswell/libflame.so.1.0.0
/usr/lib64/libflame.so.1
/usr/lib64/libflame.so.1.0.0

%files license
%defattr(0644,root,root,0755)
/usr/share/package-licenses/libflame/11b889cbe5338cf8de2a75749738adeeab861700
/usr/share/package-licenses/libflame/43aec05aaa034319115be9a2ae3aa318655c6217
/usr/share/package-licenses/libflame/a0065b8dcdd0af36d23e2a95aba20acbdfec4ecd
